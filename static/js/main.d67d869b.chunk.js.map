{"version":3,"sources":["hooks/use-boolean.js","hooks/use-toggle.js","hooks/use-number.js","hooks/use-measure-window.js","hooks/use-input.js","components/WindowMeasure.js","components/Counter.js","managers/UserManager.js","components/Form.js","components/Header.js","components/Footer.js","components/Toggle.js","components/Select.js","components/Option.js","App.js","serviceWorker.js","index.js"],"names":["useBoolean","initValue","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","value","setValue","useToggle","_useBoolean","_useBoolean2","inverse","useNumber","initialValue","useMeasureWindow","width","window","outerWidth","height","outerHeight","size","setSize","updateSize","e","target","useEffect","addEventListener","removeEventListener","objectSpread","useInput","onChange","WindowMeasure","_useMeasureWindow","react_default","a","createElement","concat","Counter","_useNumber","_useNumber2","counter","increase","decrease","Fragment","onClick","UserContext","React","createContext","UserManager","_ref","children","name","surname","user","setUser","Provider","Form","useContext","assign","type","preventDefault","Header","style","textAlign","Footer","Toggle","toggle","className","components_Counter","SelectContext","SelectManager","selectedOption","setOption","_useState3","_useState4","isOpened","setOpened","_useState5","_useState6","options","addOption","selectOption","option","prepareOption","body","cloneElement","classnames","props","registerOption","toConsumableArray","Option","_useContext","render","pickOption","console","log","option--selected","App","components_WindowMeasure","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d67d869b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useBoolean = (initValue = false) => {\r\n  const [value, setValue] = useState(initValue);\r\n  const toggle = () => setValue(!value);\r\n  return [value, toggle, setValue];\r\n};\r\n\r\nexport default useBoolean;\r\n","import useBoolean from \"./use-boolean\";\r\n\r\nconst useToggle = (initValue = false) => {\r\n  const [toggle, inverse] = useBoolean(initValue);\r\n  return {\r\n    value: toggle,\r\n    inverse\r\n  };\r\n};\r\n\r\nexport default useToggle;\r\n","import { useState } from \"react\";\r\nconst useNumber = (initialValue = 0) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const increase = () => setValue(value => value + 1);\r\n  const decrease = () => setValue(value => value - 1);\r\n\r\n  return [value, increase, decrease, setValue];\r\n};\r\nexport default useNumber;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useMeasureWindow = () => {\r\n  const [size, setSize] = useState({\r\n    width: window.outerWidth,\r\n    height: window.outerHeight\r\n  });\r\n  const updateSize = e => {\r\n    setSize({\r\n      width: e.target.outerWidth,\r\n      height: e.target.outerHeight\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateSize);\r\n    return () => {\r\n      window.removeEventListener(\"risze\", updateSize);\r\n    };\r\n  });\r\n  return {\r\n    ...size\r\n  };\r\n};\r\n\r\nexport default useMeasureWindow;\r\n","import { useState } from \"react\";\r\n\r\nconst useInput = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const onChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import React from \"react\";\r\nimport { useMeasureWindow } from \"../hooks\";\r\n\r\nconst WindowMeasure = () => {\r\n  const { width, height } = useMeasureWindow();\r\n  return (\r\n    <div>\r\n      <h2>WindowMeasure solution</h2>\r\n      <p>{`Window size is: ${width}px X ${height}px.`}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WindowMeasure;\r\n","import React from \"react\";\r\nimport { useNumber } from \"../hooks\";\r\nconst Counter = () => {\r\n  let [counter, increase, decrease] = useNumber(0);\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Counter solution</h2>\r\n      <p>You have clicked {counter} times</p>\r\n      <button onClick={increase}>Increase</button>\r\n      <button onClick={decrease}>Decrease</button>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Counter;\r\n","import React, { useState } from \"react\";\r\n\r\nexport const UserContext = React.createContext({});\r\n\r\nexport default function UserManager({ children }) {\r\n  const [user, setUser] = useState({\r\n    name: \"John\",\r\n    surname: \"Lemon\"\r\n  });\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        setUser\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useInput } from \"../hooks\";\r\nimport { UserContext } from \"../managers\";\r\n\r\nexport default function Form() {\r\n  const name = useInput(\"\");\r\n  const surname = useInput(\"\");\r\n  const { setUser } = useContext(UserContext);\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    let user = { name: name.value, surname: surname.value };\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Form solution</h2>\r\n      <p>\r\n        <input type=\"text\" {...name} />\r\n      </p>\r\n      <p>\r\n        <input type=\"text\" {...surname} />\r\n      </p>\r\n      <p>\r\n        <button type=\"submit\" onClick={submitForm}>\r\n          Submit\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../managers\";\r\n\r\nexport default function Header() {\r\n  const { user } = useContext(UserContext);\r\n  if (!user.name || !user.surname) {\r\n    return <div>No user :( </div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h2>Header</h2>\r\n      <p>{`User name is ${user.name}`}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../managers\";\r\n\r\nexport default function Footer() {\r\n  const { user } = useContext(UserContext);\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h2>Footer</h2>\r\n      <p>{`User surname is ${user.surname}`}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useToggle } from \"../hooks\";\r\nimport Counter from \"./Counter\";\r\n\r\nexport default function Toggle() {\r\n  const toggle = useToggle(true);\r\n  return (\r\n    <div className=\"toggle\">\r\n      <button onClick={toggle.inverse}>\r\n        {!toggle.value ? \"Show\" : \"Hide\"} counter\r\n      </button>\r\n      {toggle.value && <Counter />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nexport const SelectContext = React.createContext({});\r\n\r\nexport default function SelectManager({ children }) {\r\n  const [selectedOption, setOption] = useState(null);\r\n  const [isOpened, setOpened] = useState(true);\r\n  const [options, addOption] = useState([]);\r\n  const registerOption = option => {\r\n    addOption([...options, option]);\r\n    if (!selectedOption) {\r\n      selectOption(options[0]);\r\n    }\r\n  };\r\n  const selectOption = option => {\r\n    setOption(option);\r\n    setOpened(false);\r\n  };\r\n  const open = e => {\r\n    setOpened(true);\r\n  };\r\n  const prepareOption = body => {\r\n    return React.cloneElement(body, {\r\n      className: classnames(body.props.className, \"option--selected\")\r\n    });\r\n  };\r\n\r\n  if (isOpened)\r\n    return (\r\n      <SelectContext.Provider\r\n        value={{\r\n          selectedOption,\r\n          selectOption,\r\n          registerOption\r\n        }}\r\n      >\r\n        <div className=\"select\">{children}</div>\r\n      </SelectContext.Provider>\r\n    );\r\n  else {\r\n    return (\r\n      <div className=\"select\" onClick={open}>\r\n        {selectedOption ? (\r\n          prepareOption(selectedOption.body)\r\n        ) : options[0] ? (\r\n          prepareOption(options[0].body)\r\n        ) : (\r\n          <button>pick one</button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { SelectContext } from \"./Select\";\r\n\r\nexport default function Option({ value, children }) {\r\n  const { selectOption, registerOption, selectedOption } = useContext(\r\n    SelectContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    registerOption({ value, body: render() });\r\n  }, []);\r\n\r\n  const pickOption = () => {\r\n    console.log(`picked ${value}`);\r\n    selectOption({ value, body: render() });\r\n  };\r\n  const isSelected = () => {\r\n    return selectedOption && selectedOption.value === value;\r\n  };\r\n  const render = () => {\r\n    return (\r\n      <div\r\n        className={classnames(\"option\", {\r\n          \"option--selected\": isSelected()\r\n        })}\r\n        onClick={pickOption}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n  return render();\r\n}\r\n","import React from \"react\";\nimport {\n  Form,\n  WindowMeasure,\n  Header,\n  Footer,\n  Toggle,\n  Select,\n  Option\n} from \"./components\";\nimport \"./App.css\";\nimport { UserManager } from \"./managers\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <div>\n        <UserManager>\n          <Header />\n          <div className=\"App\">\n            <Select>\n              <Option value=\"apple\">\n                <span>Apple</span>\n              </Option>\n              <Option value=\"pear\">\n                <span>Pear</span>\n              </Option>\n              <Option value=\"grapes\">\n                <span>Grapes</span>\n              </Option>\n            </Select>\n            <Toggle />\n            <WindowMeasure />\n            <Form />\n          </div>\n          <Footer />\n        </UserManager>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}